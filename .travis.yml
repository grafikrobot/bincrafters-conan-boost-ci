# Common Linux config alias.
linux: &linux
  os: linux
  sudo: required
  language: python
  python: "3.6"
  services:
    - docker

osx: &osx
  os: osx
  language: generic

xcode73: &xcode73
  osx_image: xcode7.3
  <<: *osx

xcode83: &xcode83
  osx_image: xcode8.3
  <<: *osx

xcode90: &xcode90
  osx_image: xcode9
  <<: *osx

language: generic

stages:
  - bootstrap0
  - bootstrap1
  - level0
  - level1
  - level2
  - level3
  - level4
  - level5group
  - level5
  - level6
  - level7
  - level8group
  - level8
  - level9
  - level10
  - level11group
  - level11
  - level12
  - level13
  - level14group
  - level14
  - level15

script:
  - &run ../.travis/run.sh

matrix:
  fast_finish: true

env:
  global:
    - CONAN_USERNAME=bincrafters
    - CONAN_LOGIN_USERNAME=grafikrobot
    - SOURCE_ONLY="CONAN_ARCHS=x86 CONAN_BUILD_TYPES=Release CONAN_ARCHS=x86_64 CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7"
    - GCC_4="CONAN_GCC_VERSIONS=4.9 CONAN_DOCKER_IMAGE=lasote/conangcc49"
    - GCC_5="CONAN_GCC_VERSIONS=5 CONAN_DOCKER_IMAGE=lasote/conangcc5"
    - GCC_6="CONAN_GCC_VERSIONS=6 CONAN_DOCKER_IMAGE=lasote/conangcc6"
    - GCC_7="CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7"
    - CLANG_39="CONAN_CLANG_VERSIONS=3.9 CONAN_DOCKER_IMAGE=lasote/conanclang39"
    - CLANG_40="CONAN_CLANG_VERSIONS=4.0 CONAN_DOCKER_IMAGE=lasote/conanclang40"
    - XCODE_73="CONAN_APPLE_CLANG_VERSIONS=7.3"
    - XCODE_81="CONAN_APPLE_CLANG_VERSIONS=8.1"
    - XCODE_90="CONAN_APPLE_CLANG_VERSIONS=9.0"

jobs:
  include:
    - stage: bootstrap0
      env: REPO=boost-build CONAN_BUILD_TYPES=Release CONAN_GCC_VERSIONS=7 CONAN_DOCKER_IMAGE=lasote/conangcc7
      <<: *linux
    - env: REPO=boost-build CONAN_BUILD_TYPES=Release CONAN_APPLE_CLANG_VERSIONS=9.0
      <<: *xcode90

    - stage: bootstrap1
      env: REPO=boost-generator BUILD=SOURCE_ONLY
      <<: *linux

    - stage: level0
      env: REPO=boost-callable_traits BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-compatibility BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-config BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-predef BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-preprocessor BUILD=SOURCE_ONLY
      <<: *linux
      
    - stage: level1
      env: REPO=boost-assert BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-io BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-mp11 BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-preprocessor BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-static_assert BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-vmd BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-winapi BUILD=SOURCE_ONLY
      <<: *linux
      
    - stage: level2
      env: REPO=boost-core BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-throw_exception BUILD=SOURCE_ONLY
      <<: *linux
      
    - stage: level3
      env: REPO=boost-align BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-array BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-bind BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-integer BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-logic BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-move BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-system BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-system BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-system BUILD=XCODE_90
      <<: *xcode90
    - env: REPO=boost-type_traits BUILD=SOURCE_ONLY
      <<: *linux
      
    - stage: level4
      env: REPO=boost-atomic BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-atomic BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-crc BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-smart_ptr BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-tuple BUILD=SOURCE_ONLY
      <<: *linux
      
    - stage: level5group
      env: REPO=boost-level5group BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-exception BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-exception BUILD=CLANG_40
      <<: *linux
      
    - stage: level5
      env: REPO=boost-concept_check BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-conversion BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-detail BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-exception BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-exception BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-function BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-function_types BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-functional BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-fusion BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-iterator BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-mpl BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-optional BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-type_index BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-typeof BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-utility BUILD=SOURCE_ONLY
      <<: *linux

    - stage: level6
      env: REPO=boost-any BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-endian BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-format BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-gil BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-hana BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-instrusive BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-lambda BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-locale BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-metaparse BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-multi_array BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-numeric_conversion BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-numeric_interval BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-polygon BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-qvm BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-rational BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-regex BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-regex BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-scope_exit BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-tokenizer BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-tti BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-type_erasure BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-type_erasure BUILD=CLANG_40
      <<: *linux
      
    - stage: level7
      env: REPO=boost-container BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-container BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-local_function BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-poly_collection BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-range BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-ratio BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-signals BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-signals BUILD=CLANG_40
      <<: *linux
      
    - stage: level8group
      env: REPO=boost-level8group BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-level8group BUILD=CLANG_40
      <<: *linux
      
    - stage: level8
      env: REPO=boost-chrono BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-chrono BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-circular_buffer BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-filesystem BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-filesystem BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-foreach BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-lexical_cast BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-math BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-math BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-proto BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-unordered BUILD=SOURCE_ONLY
      <<: *linux
      
    - stage: level9
      env: REPO=boost-program_options BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-program_options BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-python BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-python BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-random BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-ramdom BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-stacktrace BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-stacktrace BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-variant BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-xpressive BUILD=SOURCE_ONLY
      <<: *linux
      
    - stage: level10
      env: REPO=boost-iostreams BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-iostreams BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-multiprecision BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-parameter BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-test BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-test BUILD=CLANG_40
      <<: *linux
      
    - stage: level11group
      env: REPO=boost-level11group BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-level11group BUILD=CLANG_40
      <<: *linux
      
    - stage: level11
      env: REPO=boost-date_time BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-date_time BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-heap BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-locale BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-locale BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-lockfree BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-pool BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-serialization BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-serialization BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-spirit BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-thread BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-thread BUILD=CLANG_40
      <<: *linux
      
    - stage: level12
      env: REPO=boost-context BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-context BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-convert BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-dll BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-dynamic_bitset BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-geometry BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-icl BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-interprocess BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-msm BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-multi_index BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-numeric_ublas BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-ptr_container BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-sort BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-statechart BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-units BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-uuid BUILD=SOURCE_ONLY
      <<: *linux
      
    - stage: level13
      env: REPO=boost-accumulators BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-assign BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-coroutine BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-coroutine BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-coroutine2 BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-fiber BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-fiber BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-flyweight BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-property_tree BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-signals BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-wave BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-wave BUILD=CLANG_40
      <<: *linux
      
    - stage: level14group
      env: REPO=boost-level14group BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-level14group BUILD=CLANG_40
      <<: *linux
      
    - stage: level14
      env: REPO=boost-asio BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-bimap BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-compute BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-disjoint_sets BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-graph BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-graph BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-graph_parallel BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-graph_parallel BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-log BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-log BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-mpi BUILD=GCC_7
      <<: *linux
    - env: REPO=boost-mpi BUILD=CLANG_40
      <<: *linux
    - env: REPO=boost-property_map BUILD=SOURCE_ONLY
      <<: *linux
      
    - stage: level15
      env: REPO=boost-beast BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-numeric_odeint BUILD=SOURCE_ONLY
      <<: *linux
    - env: REPO=boost-process BUILD=SOURCE_ONLY
      <<: *linux

install:
  - chmod +x .travis/run.sh
  - chmod +x .travis/install.sh
  - ./.travis/install.sh
  - git clone -b ${TRAVIS_BRANCH} https://github.com/bincrafters/conan-${REPO} ${REPO}
  - cd ${REPO}
